プログラミング言語
　手続き型言語
　　C,C++、Java、Basic,FORTRAN、PASCAL
　　python, PHP, Perl, COBOL

　関数型言語
　　LISP　LISt Processing(リスト処理）
　　　emacs はLISPで書かれたプログラム

　宣言型言語
　　Prolog　Programming in Logic
　

Common LISPのUbuntuへの導入
  $ sudo apt install clisp  　　　//でclispをインストール
  $ which clisp       これで/usr/bin/clispと出たらインストール成功
　$ clisp　　　　　　　これでclisp開始


LISPのプログラミング
　LISt Processing リスト処理
　　(1 2 3 4 5)   リストの例
　　(+ 1 2 3 4)   →　10
    (+ (+ 1 2) (+ 3 4))
  Lot's of Inspid Stupid Parenthesis  馬鹿みたいにカッコが多い

LISPはインタープリタ方式の実行
　入力された命令を即座に実行して結果を返す。
参考：C++はコンパイラ方式の実行
　入力された命令群をまとめてコンパイル後に実行して結果を返す。


演習
　上底12、下底16、高さ8の台形の面積を求める


１．LISPのプログラムの大部分は関数である。
　関数の呼び出し方
　　C++の場合　　関数名(引数1,引数2,…）
　　LISPの場合　 (関数名　引数1　引数2　…)
                    例　(+ 1 2)
　　　LISPでは「関数を評価(eval)する」と言う。

２．アトムとリスト
　LISPにおける記号式の２つの基本形が　アトム　と　リスト

　アトム：単純要素(それ以上分解できないもの：原子と同じ）
　　例　1,  +,  apple,  I_like_an_apple
　リスト：()で囲まれた構造
　　例　(1 2 3 4)
        (cat dog hamster)
        (apple)
        (apple 80)
        (+ 1 2)
        () nil   空リスト（要素数が0のリスト）
　　　　((apple 80) (orange 60))   リストの入れ子（多重リスト）
　　　注意：リスト内の要素の順序が意味を持つ
　　　　　(1 2 3) (2 1 3) は別のリストとみなされる
　　　リストのうち、評価してほしくないリストには　'をつける。
　　　　　'(1 2)  第1要素（ここでは１)は関数ではない。

３．リスト操作関数
　3.1　car(カー）とcdr(クダー）
　　car  リストの先頭要素を取り出す
　　cdr  リストの先頭要素を取り除いたリストを返す

　※lisp使用中に入力内容にエラーがある場合には
   　　Break 1 [2]>
　　のようなプロンプトに変わります。これはエラー状態が続いていることを
　　意味していますので、カッコをつけずに quit と入力するか CTRL+Dで
　　通常のプロンプトでの入力待ちの状態に復帰できます。

    carとcdrは連続して使用することが多い。その場合、カッコの入れ子の表現でも
　　良いが、
　　　(car (cdr '(apple orange banana)))
      (cadr '(apple orange banana))
    は同じ表現となり、簡略表現が可能である。

　3.2 consとlist
    cons　第1引数を第２引数のリストの先頭に挿入する
　　list　与えられた引数を要素にしたリストを返す

